string longestPalindromicSubstring(string s) {
        int dp[s.size()+10][s.size()+10], start=0, length=1;
        memset(dp,0,sizeof dp);
        
        for(int i=0;i<s.size();i++)
        dp[i][i]=1;
        
        for(int i=1;i<s.size();i++)
        if(s[i-1]==s[i])
        	dp[i-1][i]=2, length=2, start=i-1;
        
        for(int i=2;i<s.size();i++){
            for(int j=i;j<s.size();j++){
                if(s[j-i]==s[j] && dp[j-i+1][j-1]>0) dp[j-i][j]=dp[j-i+1][j-1]+2;
                if(length<dp[j-i][j])
                start=j-i, length=dp[j-i][j];
            }
        }
        return s.substr(start,length);
    }
